//
//  OnboardingView.swift
//  doctor-ai
//
//  Created by Juiko Ong on 06/07/2024.
//

import SwiftUI
import Supabase

struct OnboardingView: View {
    @State private var selectedTab = 0
    @State private var navigateToMainContent = false
    @State private var navigateToDemoContent = false
    @StateObject private var itemModel = ItemModel()
    @StateObject private var testnameModel = TestnameModel()
    @StateObject private var demomatchModel = DemomatchModel()
    
    var body: some View {
        if navigateToMainContent {
            ContentView()
        } else if navigateToDemoContent {
            DemoContentView()
        } else {
            ZStack {
                Color.white.edgesIgnoringSafeArea(.all)
                
#if os(iOS)
                TabView(selection: $selectedTab) {
                    OnboardingIntroView()
                    .tag(0)
                    
                    VStack {
                        Spacer()
                        Button(action: {
                            navigateToMainContent = true
                        }) {
                            VStack {
                                Text("Subscribe to Doctor AI")
                                    .font(.title)
                                Text("$1.99 Yearly")
                                    .font(.title2)
                            }
                            .padding()
                            .frame(maxWidth: 300)
                        }
                        .foregroundColor(Color(red: 17 / 255, green: 24 / 255, blue: 39 / 255))
                        .background(Color(.lightGray))
                        .cornerRadius(30)
                        Spacer()
                        Button(action: {
                            itemModel.initDemoMode()
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Red Blood Cell", result: "4.8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCV", result: "90", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCH", result: "29", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Lymphocytes %", result: "26", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Monocytes %", result: "8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Eosinophils %", result: "1.5", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Basophils %", result: "1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "White Blood Cell", result: "Nil", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Sodium", result: "138", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Potassium", result: "3.8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Chloride", result: "106", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Urea Nitrogen", result: "5", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Creatinine", result: "82", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Estimated - GFR ( CKD-EPI )", result: "112", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Uric Acid", result: "390", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Glucose", result: "6.8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Calcium", result: "2.4", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Adjusted Calcium", result: "2.3", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Phosphate", result: "1.18", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Protein", result: "71", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Albumin", result: "44", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Globulin", result: "30", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "A/G Ratio", result: "1.51", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Alkaline Phosphatase", result: "50", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "AST/SGOT", result: "21", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "ALT/SGPT", result: "41", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Bilirubin", result: "21", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Cholesterol", result: "4.4", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HDL-Cholesterol", result: "1.4", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "LDL-Cholesterol", result: "2.1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Triglycerides", result: "2.1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HbA1c", result: "6.1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "(Method: Ion exchange HPLC)", result: "44", batch: 1)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antigen", result: "Not Detected", batch: 1)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antibody", result: "110", batch: 1)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "VDRL (RPR)", result: "Non Reactive", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Appearance", result: "Clear", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine pH", result: "6.3", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Specific Gravity", result: "1.018", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Protein", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Glucose", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Ketone", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Urobilinogen", result: "6", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Bilirubin", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Blood", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Red Blood Cell", result: "4.9", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCV", result: "91", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCH", result: "30", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Lymphocytes %", result: "27", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Monocytes %", result: "9", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Eosinophils %", result: "2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Basophils %", result: "1.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "White Blood Cell", result: "Nil", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Sodium", result: "140", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Potassium", result: "4", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Chloride", result: "107", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Urea Nitrogen", result: "6", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Creatinine", result: "85", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Estimated - GFR ( CKD-EPI )", result: "115", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Uric Acid", result: "400", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Glucose", result: "7", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Calcium", result: "2.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Adjusted Calcium", result: "2.4", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Phosphate", result: "1.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Protein", result: "72", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Albumin", result: "45", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Globulin", result: "31", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "A/G Ratio", result: "1.52", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Alkaline Phosphatase", result: "51", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "AST/SGOT", result: "22", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "ALT/SGPT", result: "42", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Bilirubin", result: "22", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Cholesterol", result: "4.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HDL-Cholesterol", result: "1.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "LDL-Cholesterol", result: "2.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Triglycerides", result: "2.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HbA1c", result: "6.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "(Method: Ion exchange HPLC)", result: "45", batch: 2)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antigen", result: "Not Detected", batch: 2)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antibody", result: "120", batch: 2)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "VDRL (RPR)", result: "Non Reactive", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Appearance", result: "Clear", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine pH", result: "6.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Specific Gravity", result: "1.02", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Protein", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Glucose", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Ketone", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Urobilinogen", result: "7", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Bilirubin", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Blood", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Red Blood Cell", result: "4.7", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCV", result: "89", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCH", result: "28", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Lymphocytes %", result: "25", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Monocytes %", result: "7", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Eosinophils %", result: "1.4", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Basophils %", result: "0.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "White Blood Cell", result: "Nil", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Sodium", result: "136", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Potassium", result: "3.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Chloride", result: "105", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Urea Nitrogen", result: "4", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Creatinine", result: "80", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Estimated - GFR ( CKD-EPI )", result: "110", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Uric Acid", result: "395", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Glucose", result: "6.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Calcium", result: "2.45", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Adjusted Calcium", result: "2.2", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Phosphate", result: "1.15", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Protein", result: "70", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Albumin", result: "43", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Globulin", result: "29", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "A/G Ratio", result: "1.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Alkaline Phosphatase", result: "49", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "AST/SGOT", result: "20", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "ALT/SGPT", result: "40", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Bilirubin", result: "20", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Cholesterol", result: "4.3", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HDL-Cholesterol", result: "1.6", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "LDL-Cholesterol", result: "2", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Triglycerides", result: "2", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HbA1c", result: "6", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "(Method: Ion exchange HPLC)", result: "43", batch: 3)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antigen", result: "Not Detected", batch: 3)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antibody", result: "100", batch: 3)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "VDRL (RPR)", result: "Non Reactive", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Appearance", result: "Clear", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine pH", result: "6", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Specific Gravity", result: "1.015", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Protein", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Glucose", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Ketone", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Urobilinogen", result: "5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Bilirubin", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Blood", result: "Negative", batch: 3)
                            itemModel.updateItem(withId: 4, newValue: 1)
                            itemModel.fetchDemoMode()
                        }) {
                            VStack {
                                Text("Demo Mode")
                                    .font(.title)
                                Text("Preview Doctor AI")
                                    .font(.title2)
                            }
                            .padding()
                            .frame(maxWidth: 300)
                        }
                        .foregroundColor(Color(red: 17 / 255, green: 24 / 255, blue: 39 / 255))
                        .background(Color(.lightGray))
                        .cornerRadius(30)
                        Spacer()
                    }
                    .padding()
                    .tag(1)
                }
                .tabViewStyle(.page(indexDisplayMode: .always))
                .indexViewStyle(PageIndexViewStyle(backgroundDisplayMode: .always))
#else
                TabView(selection: $selectedTab) {
                    OnboardingIntroView()
                    .tag(0)
                    
                    VStack {
                        Spacer()
                        Button(action: {
                            navigateToMainContent = true
                        }) {
                            VStack {
                                Text("Subscribe to Doctor AI")
                                    .font(.title)
                                Text("$1.99 Yearly")
                                    .font(.title2)
                            }
                            .padding()
                            .frame(maxWidth: 300)
                        }
                        .foregroundColor(Color(red: 17 / 255, green: 24 / 255, blue: 39 / 255))
                        .background(Color(.lightGray))
                        .cornerRadius(30)
                        Spacer()
                        Button(action: {
                            itemModel.initDemoMode()
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Red Blood Cell", result: "4.8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCV", result: "90", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCH", result: "29", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Lymphocytes %", result: "26", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Monocytes %", result: "8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Eosinophils %", result: "1.5", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Basophils %", result: "1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "White Blood Cell", result: "Nil", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Sodium", result: "138", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Potassium", result: "3.8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Chloride", result: "106", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Urea Nitrogen", result: "5", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Creatinine", result: "82", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Estimated - GFR ( CKD-EPI )", result: "112", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Uric Acid", result: "390", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Glucose", result: "6.8", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Calcium", result: "2.4", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Adjusted Calcium", result: "2.3", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Phosphate", result: "1.18", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Protein", result: "71", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Albumin", result: "44", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Globulin", result: "30", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "A/G Ratio", result: "1.51", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Alkaline Phosphatase", result: "50", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "AST/SGOT", result: "21", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "ALT/SGPT", result: "41", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Bilirubin", result: "21", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Cholesterol", result: "4.4", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HDL-Cholesterol", result: "1.4", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "LDL-Cholesterol", result: "2.1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Triglycerides", result: "2.1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HbA1c", result: "6.1", batch: 1)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "(Method: Ion exchange HPLC)", result: "44", batch: 1)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antigen", result: "Not Detected", batch: 1)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antibody", result: "110", batch: 1)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "VDRL (RPR)", result: "Non Reactive", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Appearance", result: "Clear", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine pH", result: "6.3", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Specific Gravity", result: "1.018", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Protein", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Glucose", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Ketone", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Urobilinogen", result: "6", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Bilirubin", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Blood", result: "Negative", batch: 1)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Red Blood Cell", result: "4.9", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCV", result: "91", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCH", result: "30", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Lymphocytes %", result: "27", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Monocytes %", result: "9", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Eosinophils %", result: "2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Basophils %", result: "1.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "White Blood Cell", result: "Nil", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Sodium", result: "140", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Potassium", result: "4", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Chloride", result: "107", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Urea Nitrogen", result: "6", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Creatinine", result: "85", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Estimated - GFR ( CKD-EPI )", result: "115", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Uric Acid", result: "400", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Glucose", result: "7", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Calcium", result: "2.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Adjusted Calcium", result: "2.4", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Phosphate", result: "1.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Protein", result: "72", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Albumin", result: "45", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Globulin", result: "31", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "A/G Ratio", result: "1.52", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Alkaline Phosphatase", result: "51", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "AST/SGOT", result: "22", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "ALT/SGPT", result: "42", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Bilirubin", result: "22", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Cholesterol", result: "4.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HDL-Cholesterol", result: "1.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "LDL-Cholesterol", result: "2.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Triglycerides", result: "2.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HbA1c", result: "6.2", batch: 2)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "(Method: Ion exchange HPLC)", result: "45", batch: 2)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antigen", result: "Not Detected", batch: 2)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antibody", result: "120", batch: 2)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "VDRL (RPR)", result: "Non Reactive", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Appearance", result: "Clear", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine pH", result: "6.5", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Specific Gravity", result: "1.02", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Protein", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Glucose", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Ketone", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Urobilinogen", result: "7", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Bilirubin", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Blood", result: "Negative", batch: 2)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Red Blood Cell", result: "4.7", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCV", result: "89", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "MCH", result: "28", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Lymphocytes %", result: "25", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Monocytes %", result: "7", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Eosinophils %", result: "1.4", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "Basophils %", result: "0.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Haematology", sub: "White Blood Cell", result: "Nil", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Sodium", result: "136", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Potassium", result: "3.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Chloride", result: "105", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Urea Nitrogen", result: "4", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Creatinine", result: "80", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Estimated - GFR ( CKD-EPI )", result: "110", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Uric Acid", result: "395", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Glucose", result: "6.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Calcium", result: "2.45", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Adjusted Calcium", result: "2.2", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Phosphate", result: "1.15", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Protein", result: "70", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Albumin", result: "43", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Globulin", result: "29", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "A/G Ratio", result: "1.5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Alkaline Phosphatase", result: "49", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "AST/SGOT", result: "20", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "ALT/SGPT", result: "40", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Bilirubin", result: "20", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Total Cholesterol", result: "4.3", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HDL-Cholesterol", result: "1.6", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "LDL-Cholesterol", result: "2", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "Triglycerides", result: "2", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "HbA1c", result: "6", batch: 3)
                            demomatchModel.addDemomatch(withName: "Biochemistry", sub: "(Method: Ion exchange HPLC)", result: "43", batch: 3)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antigen", result: "Not Detected", batch: 3)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "Hepatitis B Surface Antibody", result: "100", batch: 3)
                            demomatchModel.addDemomatch(withName: "Serology", sub: "VDRL (RPR)", result: "Non Reactive", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Appearance", result: "Clear", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine pH", result: "6", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Specific Gravity", result: "1.015", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Protein", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Glucose", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Ketone", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Urobilinogen", result: "5", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Bilirubin", result: "Negative", batch: 3)
                            demomatchModel.addDemomatch(withName: "Microbiology", sub: "Urine Blood", result: "Negative", batch: 3)
                            itemModel.updateItem(withId: 4, newValue: 1)
                            itemModel.fetchDemoMode()
                        }) {
                            VStack {
                                Text("Demo Mode")
                                    .font(.title)
                                Text("Preview Doctor AI")
                                    .font(.title2)
                            }
                            .padding()
                            .frame(maxWidth: 300)
                        }
                        .foregroundColor(Color(red: 17 / 255, green: 24 / 255, blue: 39 / 255))
                        .background(Color(.lightGray))
                        .cornerRadius(30)
                        Spacer()
                    }
                    .padding()
                    .tag(1)
                }
#endif
                
                VStack {
                    Spacer()
                    HStack {
                        Spacer()
                        if (selectedTab == 0) {
                            Button(action: {
                                selectedTab = 1
                            }) {
                                Text("Continue")
                                    .padding()
                                    .background(Color.blue)
                                    .foregroundColor(.white)
                                    .cornerRadius(8)
                                    .padding()
                            }
                        }
                    }
                }
                .onAppear {
                    itemModel.fetchRevision()
                    itemModel.fetchLastBatch()
                    itemModel.fetchTotalBatch()
                    itemModel.fetchDemoMode()
                    DispatchQueue.main.asyncAfter(deadline: .now() + 1.1) {
                        if (itemModel.revision == "0") {
                            itemModel.initRevision()
                            testnameModel.addTestname(withMain: "Haematology", sub: "Haemoglobin", unit: "g/dL", maxvalue: "17", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Red Blood Cell", unit: "x10^12/L", maxvalue: "5.5", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Red Blood Cells", unit: "x10^12/L", maxvalue: "5.5", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Haematocrit", unit: "%", maxvalue: "50", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "MCH", unit: "pg", maxvalue: "32", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "MCV", unit: "fL", maxvalue: "101.1", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "MCH-С", unit: "g/dL", maxvalue: "34.5", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "RDW-CV", unit: "%", maxvalue: "14", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Total White Blood Cell", unit: "x10^3/µL", maxvalue: "10", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Total White Blood Cells", unit: "x10^3/µL", maxvalue: "10", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "White Blood Cell", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Neutrophil %", unit: "%", maxvalue: "80", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Neutrophil", unit: "x10^3/µL", maxvalue: "7", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Lymphocyte %", unit: "%", maxvalue: "40", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Lymphocyte", unit: "x10^3/µL", maxvalue: "3", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Lymphocytes", unit: "x10^3/µL", maxvalue: "3", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Lymphocytes %", unit: "%", maxvalue: "40", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Monocyte %", unit: "%", maxvalue: "10", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Monocyte", unit: "x10^3/µL", maxvalue: "1", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Monocytes", unit: "x10^3/µL", maxvalue: "1", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Monocytes %", unit: "%", maxvalue: "10", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Eosinophils %", unit: "%", maxvalue: "6", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Eosinophils", unit: "x10^3/µL", maxvalue: "0.5", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Basophil %", unit: "%", maxvalue: "2", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Basophil", unit: "x10^3/µL", maxvalue: "0.2", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Basophils", unit: "x10^3/µL", maxvalue: "0.2", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Basophils %", unit: "%", maxvalue: "2", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Platelet", unit: "x10^3/µL", maxvalue: "450", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "ESR", unit: "mm/hr", maxvalue: "15", revision: 2)
                            testnameModel.addTestname(withMain: "Haematology", sub: "Erythrocyte Sedimentalion Rate", unit: "mm/hr", maxvalue: "15", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Total Cholesterol", unit: "mmol/L", maxvalue: "5.2", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Triglycerides", unit: "mmol/L", maxvalue: "2.3", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "HDL Cholesterol", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "HDL-Cholesterol", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "LDL Cholesterol", unit: "mmol/L", maxvalue: "2.59", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "LDL-Cholesterol", unit: "mmol/L", maxvalue: "2.59", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Total Cholesterol/HDL Ratio", unit: ".", maxvalue: "5", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Cholestrol/HDL Ratio", unit: ".", maxvalue: "5", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Sodium", unit: "mmol/L", maxvalue: "146", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Potassium", unit: "mmol/L", maxvalue: "5.2", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Chloride", unit: "mmol/L", maxvalue: "109", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Urea", unit: "mmol/L", maxvalue: "7", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Urea Nitrogen", unit: "mmol/L", maxvalue: "7", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Creatinine", unit: "umol/L", maxvalue: "104", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "eGFR", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Estimated - GFR ( CKD-EPI )", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Uric Acid", unit: "umol/L", maxvalue: "429", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Calcium", unit: "mmol/L", maxvalue: "2.65", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Corrected Calcium", unit: "mmol/L", maxvalue: "2.55", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Adjusted Calcium", unit: "mmol/L", maxvalue: "2.52", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Phosphate", unit: "mmol/L", maxvalue: "1.45", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Albumin", unit: "g/L", maxvalue: "52", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Total Protein", unit: "g/L", maxvalue: "83", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Globulin", unit: "g/L", maxvalue: "34", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "A/G Ratio", unit: "Ratio", maxvalue: "2.1", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Alkaline Phosphatase (ALP)", unit: "U/L", maxvalue: "115", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Alkaline Phosphatase", unit: "U/L", maxvalue: "115", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Total Bilirubin", unit: "umol/L", maxvalue: "104", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "GGT", unit: "U/L", maxvalue: "55", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Gamma/GT", unit: "U/L", maxvalue: "55", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "AST", unit: "U/L", maxvalue: "50", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "AST/SGOT", unit: "U/L", maxvalue: "50", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "ALT", unit: "U/L", maxvalue: "45", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "ALT/SGPT", unit: "U/L", maxvalue: "45", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Glucose", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Specimen Collection Time", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Specimen Type", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Glycated Haemoglobin (HbA1c)", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "HbA1c", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "HbA1c IFCC", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "(Method: Ion exchange HPLC)", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "HbA1c IFCC (Ion exchange HPLC)", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "Rheumatoid Arthritis Factor", unit: "IU/mL", maxvalue: "20", revision: 2)
                            testnameModel.addTestname(withMain: "Biochemistry", sub: "R.A Factor", unit: "IU/mL", maxvalue: "20", revision: 2)
                            testnameModel.addTestname(withMain: "Serology", sub: "Hepatitis B Surface Antigen", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Serology", sub: "Hepatitis B Surface Antigen (CMIA)", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Serology", sub: "Hepatitis B Surface Antibody", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Serology", sub: "Hepatitis B Surface Antibody (CMIA)", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Serology", sub: "VDRL (RPR)", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Colour", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Clarity", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Appearance", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Specific Gravity", unit: ".", maxvalue: "1.03", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "pH", unit: ".", maxvalue: "7.4", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine pH", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Leucocyte", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Leucocyte", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Blood", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Blood", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Nitrate", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Nitrate", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Ketone", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Ketone", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Bilirubin", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urobilinogen", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Urobilinogen", unit: "umol/L", maxvalue: "17", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Protein", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Protein", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Glucose", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Glucose", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Leucocyte", unit: "x 10^6/L", maxvalue: "10", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Urine Leucocyte", unit: "x 10^6/L", maxvalue: "10", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Erythrocytes", unit: "x 10^6/L", maxvalue: "10", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Epithelial Cell", unit: "", maxvalue: "-", revision: 2)
                            testnameModel.addTestname(withMain: "Microbiology", sub: "Epithelial Cells", unit: "", maxvalue: "-", revision: 2)
                            itemModel.updateItem(withId: 1, newValue: 2)
                            itemModel.fetchRevision()
                        }
                    }
                }
                .onChange(of: itemModel.totalbatch) {
                    if Int(itemModel.totalbatch)! > 0 {
                        navigateToMainContent = true
                    }
                }
                .onChange(of: itemModel.demomode) {
                    if Int(itemModel.demomode)! > 0 {
                        navigateToDemoContent = true
                    }
                }
            }
        }
    }
}

#Preview {
    OnboardingView()
}

